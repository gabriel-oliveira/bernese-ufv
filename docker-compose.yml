version: "3.8"

x-django:
    &default-django
    image: gnssufv/django:latest
    build: 
        context: ./
        dockerfile: Dockerfile.django

services:

    postgres:
        image: gnssufv/postgis:latest
        build: 
            context: ./
            dockerfile: Dockerfile.postgis
        volumes:
            - postgres:/var/lib/postgresql/data
        env_file: .env
        expose: 
            - "5432"

    django:
        << : *default-django
        command: [ "./wait-for-postgres.sh", "python", "manage.py", "runserver", "0.0.0.0:8000" ]
        ports:
            - "8000:8000"
        env_file: .env
        volumes: 
            - rinex_upload:/usr/src/app/RINEX_UPLOAD_TEMP_DIR
            - temp:/usr/src/app/TEMP
            - log:/usr/src/app/LOG
        depends_on: 
            - postgres

    rabbitmq:
        image: rabbitmq:3
        # image: rabbitmq:3-management
        expose: 
            - "5672"
        # ports:
        #     - "15672:15672"

    celery:
        << : *default-django
        command: [ "./wait-for-postgres.sh", "celery", "-A", "bernese", "worker", "-l", "info" ]
        depends_on: 
            - rabbitmq
        env_file: .env
        volumes: 
            - rinex_upload:/usr/src/app/RINEX_UPLOAD_TEMP_DIR
            - temp:/usr/src/app/TEMP
            - results:/usr/src/app/RESULTADOS
            - log:/usr/src/app/LOG

    # flower:
    #     << : *default-django
    #     command: [ "./wait-for-postgres.sh", "celery", "-A", "bernese", "flower"]
    #     ports: 
    #         - "5555:5555"
    #     depends_on: 
    #         - rabbitmq
    #     env_file: .env

volumes: 
    postgres:
    rinex_upload:
    temp:
    results:
    log: